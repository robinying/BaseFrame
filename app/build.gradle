

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
android {
    compileSdk 34

    defaultConfig {
        applicationId "com.robin.baseframe"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            jni {
                srcDirs 'src/main/jni', 'src/main/cpp'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.1.1"
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    buildFeatures{
        dataBinding = true
        viewBinding = true
        //compose = true
    }
    applicationVariants.all { variant ->
        // Return compile configuration objects of a variant.
        variant.getCompileConfiguration().resolutionStrategy {
            // Use Gradle's ResolutionStrategy API
            // to customize how this variant resolves dependencies.

        }
        // Return runtime configuration objects of a variant.
        variant.getRuntimeConfiguration().resolutionStrategy {

        }
        // Return annotation processor configuration of a variant.
        variant.getAnnotationProcessorConfiguration().resolutionStrategy {

        }
    }
}

task checkJetifierAll(group: "verification") {

}

subprojects { project ->
    project.tasks.whenTaskAdded { task ->
        if (task.name == "checkJetifier") {
            checkJetifierAll.dependsOn(task)
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation "com.android.support:multidex:2.0.1"
    implementation "com.github.bumptech.glide:glide:4.12.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "com.afollestad.material-dialogs:core:3.3.0"
    implementation "com.afollestad.material-dialogs:lifecycle:3.3.0"
    implementation "com.google.code.gson:gson:2.8.8"
    implementation "com.airbnb.android:lottie:3.4.0"
    implementation "me.jessyan:autosize:1.2.1"
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "me.jessyan:retrofit-url-manager:1.4.0"
    implementation 'com.guolindev.permissionx:permissionx:1.6.1'
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:1.2.3"
// CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:1.2.3"
// CameraX View class
    implementation "androidx.camera:camera-view:1.2.1"
    //Zxing
    implementation "com.google.zxing:core:3.3.3"

//    def compose_version = '1.1.1'
//    // 基础UI框架
//    implementation "androidx.compose.ui:ui:$compose_version"
//    // Material风格布局
//    implementation "androidx.compose.material:material:$compose_version"
//    // Compose扩展Activity
//    implementation 'androidx.activity:activity-compose:1.6.0-alpha03'
//    // UI测试
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
//    // UI工具包
//    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Material风格图标
//    implementation("androidx.compose.material:material-icons-core:$compose_version")
//    implementation("androidx.compose.material:material-icons-extended:$compose_version")

    // 图片加载框架
    implementation 'io.coil-kt:coil-compose:1.3.0'


    implementation'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation project(":anylayer")
    implementation project(":module_web")
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Core API
    implementation "org.ow2.asm:asm:9.4"
    // Tree API
    implementation "org.ow2.asm:asm-tree:9.4"
}